---
import { Image } from "@astrojs/image/components";
import { Code } from "astro/components";
import { Fragment } from "react";

import { TrafficLightsIcon } from "@/components/icons/TrafficLightsIcon";
import test from "@/pages/templates/algorithm/function.test?raw";
import source from "@/pages/templates/algorithm/function?raw";
import { Button } from "./Button";
import Background from "./Hero/Background.astro";
import blurCyanImage from "./images/blur-cyan.png";
import blurIndigoImage from "./images/blur-indigo.png";

const tabs = [
  { name: ".../algorithm/function.ts", isActive: false, code: source },
  { name: ".../algorithm/function.test.ts", isActive: true, code: test },
];
---

<div
  class="overflow-hidden bg-slate-900 dark:-mb-32 dark:mt-[-4.5rem] dark:pb-32 dark:pt-[4.5rem] dark:lg:mt-[-4.75rem] dark:lg:pt-[4.75rem]"
>
  <div class="py-16 sm:px-2 lg:relative lg:py-20 lg:px-0">
    <div
      class="grid items-center max-w-2xl grid-cols-1 px-4 mx-auto gap-y-16 gap-x-8 lg:max-w-8xl lg:grid-cols-2 lg:px-8 xl:gap-x-16 xl:px-12"
    >
      <div class="relative z-10 md:text-center lg:text-left">
        <Image
          class="absolute -mb-56 opacity-50 bottom-full right-full -mr-72"
          src={blurCyanImage.src}
          alt=""
          width={530}
          height={530}
        />
        <div class="relative">
          <p
            class="inline text-5xl tracking-tight text-transparent bg-gradient-to-r from-indigo-200 via-sky-400 to-indigo-200 bg-clip-text font-display"
          >
            Kick-Start Your Coding Challenge
          </p>
          <p class="mt-3 text-2xl tracking-tight text-slate-400">
            Ready-to-go templates for frontend technical screens
          </p>
          <div class="flex gap-4 mt-8 md:justify-center lg:justify-start">
            <Button href="/#top">Get Started</Button>
          </div>
        </div>
      </div>
      <div class="relative lg:static xl:pl-10">
        <div
          class="absolute inset-x-[-50vw] -top-32 -bottom-48 [mask-image:linear-gradient(transparent,white,white)] dark:[mask-image:linear-gradient(transparent,white,transparent)] lg:left-[calc(50%+14rem)] lg:right-0 lg:-top-32 lg:-bottom-32 lg:[mask-image:none] lg:dark:[mask-image:linear-gradient(white,white,transparent)]"
        >
          <Background
            className="absolute top-1/2 left-1/2 -translate-y-1/2 -translate-x-1/2 lg:left-0 lg:translate-x-0 lg:translate-y-[-60%]"
          />
        </div>
        <div class="relative">
          <Image
            class="absolute -top-64 -right-64"
            src={blurCyanImage.src}
            alt=""
            width={530}
            height={530}
          />
          <Image
            class="absolute -bottom-40 -right-44"
            src={blurIndigoImage.src}
            alt=""
            width={567}
            height={567}
          />
          <div
            class="absolute inset-0 rounded-2xl bg-gradient-to-tr from-sky-300 via-sky-300/70 to-blue-300 opacity-10 blur-lg"
          >
          </div>
          <div
            class="absolute inset-0 rounded-2xl bg-gradient-to-tr from-sky-300 via-sky-300/70 to-blue-300 opacity-10"
          >
          </div>
          <div
            class="relative rounded-2xl bg-[#0A101F]/80 ring-1 ring-white/10 backdrop-blur"
          >
            <div
              class="absolute h-px -top-px left-20 right-11 bg-gradient-to-r from-sky-300/0 via-sky-300/70 to-sky-300/0"
            >
            </div>
            <div
              class="absolute h-px -bottom-px left-11 right-20 bg-gradient-to-r from-blue-400/0 via-blue-400 to-blue-400/0"
            >
            </div>
            <div class="pt-4 pl-4">
              <TrafficLightsIcon className="h-2.5 w-auto stroke-slate-500/30" />
              <div class="flex mt-4 space-x-2 text-xs">
                {
                  tabs.map((tab) => (
                    <div
                      class:list={[
                        "group",
                        "flex h-6",
                        "rounded-full",
                        "cursor-pointer",
                        "font-medium",
                        "p-px",
                        "data-[tab=active]:text-sky-500",
                        "data-[tab=active] bg-gradient-to-r",
                        "data-[tab=active]:from-sky-400/30",
                        "data-[tab=active]:via-sky-400",
                        "data-[tab=active]:to-sky-400/30",
                        "data-[tab=active]:text-sky-300",
                        "data-[tab=inactive]:text-slate-500",
                      ]}
                      data-tab={tab.isActive ? "active" : "inactive"}
                    >
                      <div
                        class:list={[
                          "flex",
                          "items-center",
                          "rounded-full",
                          "px-2.5",
                          "group-data-[tab=active]:bg-slate-800",
                        ]}
                      >
                        {tab.name}
                      </div>
                    </div>
                  ))
                }
              </div>

              {
                tabs.map(({ code, isActive }) => (
                  <div
                    class:list={[
                      "flex items-start px-1 mt-6 text-sm",
                      "data-[panel=inactive]:hidden",
                    ]}
                    data-panel={isActive ? "active" : "inactive"}
                    style={{
                      "--astro-code-color-background": "transparent",
                    }}
                  >
                    <div
                      aria-hidden="true"
                      class="pr-4 font-mono border-r select-none border-slate-300/5 text-slate-600"
                    >
                      {Array.from({
                        length: 8,
                      }).map((_, index) => (
                        <Fragment>
                          {(index + 1).toString().padStart(2, "0")}
                          <br />
                        </Fragment>
                      ))}
                    </div>
                    <Code code={code} lang="typescript" theme="css-variables" />
                  </div>
                ))
              }

              <script is:inline>
                const container = document.currentScript.parentElement;
                const tabs = container.querySelectorAll("[data-tab]");
                const panels = container.querySelectorAll("[data-panel]");

                tabs.forEach((tab, i) => {
                  tab.addEventListener("click", () => {
                    tabs.forEach((tab) => (tab.dataset.tab = "inactive"));
                    panels.forEach(
                      (panel) => (panel.dataset.panel = "inactive")
                    );

                    tabs[i].dataset.tab = "active";
                    panels[i].dataset.panel = "active";
                  });
                });
              </script>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
